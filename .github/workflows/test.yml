name: Test DBOS

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ['18', '20', '22']

    services:
      # Postgres service container
      postgres:
        image: sibedge/postgres-plv8:16.3-3.2.2
        env:
          # Specify the password for Postgres superuser.
          POSTGRES_PASSWORD: dbos
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      # Zookeeper service container (required by Kafka)
      zookeeper:
        image: bitnami/zookeeper
        ports:
          - 2181:2181
        env:
          ALLOW_ANONYMOUS_LOGIN: yes
        options: >-
          --health-cmd "echo mntr | nc -w 2 -q 2 localhost 2181"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # Kafka service container
      kafka:
        image: bitnami/kafka
        ports:
          - 9092:9092
        options: >-
          --health-cmd "kafka-broker-api-versions.sh --version"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
          ALLOW_PLAINTEXT_LISTENER: yes
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092

    steps:
      - name: "Setup postgres config"
        run: |
          docker exec ${{ job.services.postgres.id }} sh -c 'echo "wal_level=logical" >> /var/lib/postgresql/data/postgresql.conf'
          docker restart ${{ job.services.postgres.id }}
      - uses: actions/checkout@v4.1.1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Compile and Test
        working-directory: ./
        run: |
          npm ci
          npm run build
          npm test
          npm run lint
        env:
          PGPASSWORD: dbos
          DB_PASSWORD: dbos
          DB_USER: postgres
          KAFKA_BROKER: localhost:9092
          NPM_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SILENCE_LOGS: true
