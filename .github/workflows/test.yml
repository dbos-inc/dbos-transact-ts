name: Test DBOS

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        node-version: ['20', '22', '24']

    services:
      # Postgres service container
      postgres:
        image: sibedge/postgres-plv8:16.3-3.2.2
        ports:
          - 5432:5432
        env:
          # Specify the password for Postgres superuser.
          POSTGRES_PASSWORD: dbos
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # Kafka service container
      kafka:
        image: apache/kafka
        ports:
          - 9092:9092
        # Set health checks to wait until kafka has started
        options: >-
          --health-cmd "/opt/kafka/bin/kafka-broker-api-versions.sh --version"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 'Setup postgres config'
        run: |
          docker exec ${{ job.services.postgres.id }} sh -c 'echo "wal_level=logical" >> /var/lib/postgresql/data/postgresql.conf'
          docker restart ${{ job.services.postgres.id }}
      - uses: actions/checkout@v4.1.1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Compile and Test
        working-directory: ./
        run: |
          npm ci
          npm run build
          npm test
          npm run lint
        env:
          PGPASSWORD: dbos
          DB_PASSWORD: dbos
          DB_USER: postgres
          KAFKA_BROKER: localhost:9092
          NPM_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SILENCE_LOGS: true
